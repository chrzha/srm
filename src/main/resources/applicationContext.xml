<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:sercurity="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/security
		 				http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    <!-- Inform Spring to scan the annotation within codes for DI requirements -->
    <context:annotation-config />
    <!-- 扫描包里下的所有class文件，配置注解的类全都装入容器中进行管理 -->
    <context:component-scan base-package="com.haohe.srm" /> 
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven />
    <sercurity:http  pattern="/css/**" security="none"/>
    <sercurity:http  pattern="/img/**" security="none"/>
    <sercurity:http  pattern="/js/**" security="none"/>
    <sercurity:http  pattern="/plugins/**" security="none"/>
    <sercurity:http  pattern="/ajax/**" security="none"/>
	<sercurity:http  use-expressions="true">
		<!-- intercept-url:拦截器,可以设定哪些路径需要哪些权限来访问. filters=none 不使用过滤,也可以理解为忽略 -->
		<sercurity:intercept-url pattern="/login*" access="permitAll" />
		<sercurity:intercept-url pattern="/material/**" access="permitAll" />
		<sercurity:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />  
		<sercurity:access-denied-handler error-page="/login1" />
		<sercurity:form-login  login-page="/login_page"  login-processing-url="/login"  username-parameter="username" password-parameter="password"
		authentication-failure-url="/login_page?failure" always-use-default-target="true"
			default-target-url="/" />
	<sercurity:logout invalidate-session="true" 
			logout-success-url="/logout?success" 
			logout-url="/logout"/>
			<sercurity:csrf disabled="true"/>
	</sercurity:http>   
    
	<!-- HTTP basic authentication in Spring Security -->
	<!--<sercurity:http authentication-manager-ref="count">
		<sercurity:intercept-url pattern="/count" access="ROLE_USER" />
		<sercurity:http-basic />
	</sercurity:http>
 
     -->
	<sercurity:authentication-manager>
	   <sercurity:authentication-provider >
	       <sercurity:user-service>
		   <sercurity:user name="kevin" password="kevin" authorities="ROLE_USER" />
	       </sercurity:user-service>
	   </sercurity:authentication-provider>
	</sercurity:authentication-manager>
	
   
    <!-- 引入jdbc配置文件 -->
    <context:property-placeholder location="classpath:config/application.properties" /> 

    <!--创建jdbc数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url"
			value="jdbc:mysql://${hostname}:${portnumber}/${schemaname}?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;autoReconnect=true" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="1" /> 
		<property name="minIdle" value="3" /> 
		<property name="maxIdle" value="20" />
		<property name="maxActive" value="150" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQueryTimeout" value="1" />
		<property name="validationQuery" value="select CURRENT_DATE"/>
		<property name="timeBetweenEvictionRunsMillis" value="25000" />
		<property name="numTestsPerEvictionRun" value="150" />
	</bean>

    <!-- 事物处理注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 配置事务管理  -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 创建SqlSessionFactory，并指定数据源 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:config/mybatis-config.xml" />
        <property name="dataSource" ref="dataSource" /> 
    </bean>
    <!-- MyBatis mapper 组装-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.haohe.srm.dao" />
	</bean>
</beans>